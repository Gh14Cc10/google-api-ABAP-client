<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZGOOGLE_IO_GENERIC" VERSION="1" LANGU="E" DESCRIPT="ZGOOGLE_IO_GENERIC" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <method CLSNAME="ZGOOGLE_IO_GENERIC" CMPNAME="MAKEREQUEST" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_IO_GENERIC" CMPNAME="MAKEREQUEST" SCONAME="IO_HTTP_REQUEST" VERSION="1" LANGU="E" DESCRIPT="google_http_request" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="3" TYPE="ZGOOGLE_HTTP_REQUEST"/>
  <parameter CLSNAME="ZGOOGLE_IO_GENERIC" CMPNAME="MAKEREQUEST" SCONAME="EO_HTTP_RESPONSE" VERSION="1" LANGU="E" DESCRIPT="HTTP Framework (iHTTP) HTTP Response" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="3" TYPE="IF_HTTP_RESPONSE"/>
  <parameter CLSNAME="ZGOOGLE_IO_GENERIC" CMPNAME="MAKEREQUEST" SCONAME="EV_RESPONSESTR" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD makerequest.

    DATA: client TYPE REF TO if_http_client.
    DATA: request TYPE REF TO cl_http_request, &quot;if_http_request
    rc TYPE sy-subrc,
    http_rc TYPE sy-subrc.


    DATA lv_url TYPE string.
    DATA lv_basepath TYPE string.
    DATA lv_geturl TYPE string.
    lv_url = io_http_request-&gt;get_url( ).
    lv_basepath = io_http_request-&gt;getbasecomponent( ).

    &quot;method set
    DATA lv_method TYPE string.
    lv_method = io_http_request-&gt;getrequestmethod( ).

*    IF lv_method EQ &apos;GET&apos;.
*      CONCATENATE lv_basepath lv_url INTO lv_geturl.
*    ELSE.
    lv_geturl = lv_basepath.
*    ENDIF.

*    lv_url --&gt; to split to obtain the correct host url and the request uri

    CALL METHOD cl_http_client=&gt;create
      EXPORTING
        host               = lv_geturl
        scheme             = cl_http_client=&gt;schemetype_https
        proxy_host         = &apos;squid.techedge.corp&apos;
        proxy_service      = &apos;3128&apos;
        ssl_id             = &apos;ANONYM&apos;
*       SAP_USERNAME       =
*       SAP_CLIENT         =
      IMPORTING
        client             = client
      EXCEPTIONS
        argument_not_found = 1
        plugin_not_active  = 2
        internal_error     = 3
        OTHERS             = 4.
    IF sy-subrc &lt;&gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*            WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
    ENDIF.


    request ?= client-&gt;request.

    IF lv_method EQ &apos;GET&apos;.
      CALL METHOD client-&gt;request-&gt;set_method(
        if_http_request=&gt;co_request_method_get ).

      client-&gt;request-&gt;set_header_field(
        name = &apos;Content-length&apos;
        value = &apos;0&apos;
        ).
    ELSE.
      CALL METHOD client-&gt;request-&gt;set_method(
        if_http_request=&gt;co_request_method_post ).

      client-&gt;request-&gt;set_header_field(
        name = &apos;Content-Type&apos;
        value = &apos;application/x-www-form-urlencoded&apos;
        ).
    ENDIF.

* set protocol version
    client-&gt;request-&gt;set_version(
         if_http_request=&gt;co_protocol_version_1_1 ).

* headers

      client-&gt;request-&gt;set_header_field(
        name = &apos;Host&apos;
        value = lv_basepath
        ).

      CALL METHOD cl_http_utility=&gt;if_http_utility~set_request_uri
        EXPORTING
          request = client-&gt;request
          uri     = lv_url.

    &quot;requestheaders set
    DATA lt_headers TYPE zgoogle_http_param_t.
    DATA ls_headers TYPE zgoogle_http_param_s.

    lt_headers = io_http_request-&gt;getrequestheaders( ).
    LOOP AT lt_headers INTO ls_headers.
      client-&gt;request-&gt;set_header_field(
        name = ls_headers-vkey
        value = ls_headers-vvalue
        ).
    ENDLOOP.

    &quot;user agent set
    &quot;TODO



    &quot;requestbody set
    DATA lt_postbody TYPE zgoogle_postbody_t.
    DATA ls_postbody TYPE zgoogle_postbody_s.
    DATA lv_str TYPE string.
    DATA lv_get TYPE string.
    lt_postbody = io_http_request-&gt;getpostbody( ).

    IF lt_postbody IS NOT INITIAL.
      LOOP AT lt_postbody INTO ls_postbody.
*optional Request fields
        lv_str = cl_http_utility=&gt;if_http_utility~escape_url( ls_postbody-value ).
        CALL METHOD request-&gt;set_form_field
          EXPORTING
            name  = ls_postbody-key
            value = lv_str.
        IF sy-tabix NE 1.
          CONCATENATE lv_get &apos;&amp;&apos; ls_postbody-key &apos;=&apos; lv_str INTO lv_get.
        ELSE.
          CONCATENATE lv_get ls_postbody-key &apos;=&apos; lv_str INTO lv_get.
        ENDIF.
      ENDLOOP.
    ENDIF.

    client-&gt;request-&gt;set_cdata( lv_get ).

    &quot;execute
    CALL METHOD client-&gt;send
      EXCEPTIONS
        http_communication_failure = 1
        http_invalid_state         = 2
        http_processing_failed     = 3
        http_invalid_timeout       = 4
        OTHERS                     = 5.
    IF sy-subrc &lt;&gt; 0.
    ENDIF.

    CALL METHOD client-&gt;receive
      EXCEPTIONS
        http_communication_failure = 1
        http_invalid_state         = 2
        http_processing_failed     = 3
        OTHERS                     = 4.

    rc = sy-subrc. &quot;error receive

    IF rc = 0.
      eo_http_response = client-&gt;response.
      ev_responsestr = client-&gt;response-&gt;get_cdata( ).
    ENDIF.

* very important: close your connection
    client-&gt;close( ).
  ENDMETHOD.</source>
 </method>
</CLAS>
