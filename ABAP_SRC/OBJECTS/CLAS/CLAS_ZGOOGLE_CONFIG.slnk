<?xml version="1.0" encoding="utf-8"?>
<CLAS CLSNAME="ZGOOGLE_CONFIG" VERSION="1" LANGU="E" DESCRIPT="google_config" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
 <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
 <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
 <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
 <typeUsage CLSNAME="ZGOOGLE_CONFIG" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
 <forwardDeclaration>ABAP</forwardDeclaration>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="CONFIGURATION" VERSION="1" LANGU="E" DESCRIPT="ZGOOGLE_KCV_T" EXPOSURE="0" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGOOGLE_KCV_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GZIP_DISABLED" VERSION="1" LANGU="E" DESCRIPT="Boolean" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="ABAP_TRUE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGOOGLE_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GZIP_ENABLED" VERSION="1" LANGU="E" DESCRIPT="Boolean" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="ABAP_FALSE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGOOGLE_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GZIP_UPLOADS_ENABLED" VERSION="1" LANGU="E" DESCRIPT="Boolean" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="2" ATTVALUE="ABAP_TRUE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGOOGLE_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="USE_AUTO_IO_SELECTION" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="2" ATTVALUE="&apos;auto&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <attribute CLSNAME="ZGOOGLE_CONFIG" CMPNAME="ZIP_UPLOADS_DISABLED" VERSION="1" LANGU="E" DESCRIPT="Boolean" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="2" ATTVALUE="ABAP_FALSE" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGOOGLE_BOOL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <source>method CONSTRUCTOR.

    DATA ls_configuration   TYPE zgoogle_kcv_s.

*   The application_name is included in the User-Agent HTTP header.
    ls_configuration-vkey = &apos;application_name&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Which Authentication, Storage and HTTP IO classes to use.
    ls_configuration-vkey = &apos;auth_class&apos;.
    ls_configuration-vvalue = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    APPEND ls_configuration TO me-&gt;configuration.
    ls_configuration-vkey = &apos;io_class&apos;.
    ls_configuration-vvalue = me-&gt;use_auto_io_selection.
    APPEND ls_configuration TO me-&gt;configuration.
    ls_configuration-vkey = &apos;cache_class&apos;.
    ls_configuration-vvalue = &apos;google_cache_file&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Don&apos;t change these unless you&apos;re working against a special development
*   or testing environment.
    ls_configuration-vkey = &apos;base_path&apos;.
    ls_configuration-vvalue = &apos;www.googleapis.com&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Definition of class specific values, like file paths and so on.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;google_io_abstract&apos;.
    ls_configuration-vkey = &apos;request_timeout_seconds&apos;.
    ls_configuration-vvalue = &apos;100&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Disable the use of gzip on calls if set to true. Defaults to false.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_HTTP_REQUEST&apos;.
    ls_configuration-vkey = &apos;disable_gzip&apos;.
    ls_configuration-vvalue = me-&gt;gzip_disabled.
    APPEND ls_configuration TO me-&gt;configuration.

*   We default gzip to disabled on uploads even if gzip is otherwise
*   enabled, due to some issues seen with small packet sizes for uploads.
*   Please test with this option before enabling gzip for uploads in
*   a production environment.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_HTTP_REQUEST&apos;.
    ls_configuration-vkey = &apos;enable_gzip_for_uploads&apos;.
    ls_configuration-vvalue = me-&gt;zip_uploads_disabled.
    APPEND ls_configuration TO me-&gt;configuration.


*   If you want to pass in OAuth 2.0 settings, they will need to be
*   structured like this.

*   Keys for OAuth 2.0 access, see the API console at
*   https://developers.google.com/console
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;client_id&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;client_secret&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;redirect_uri&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Simple API access key, also from the API console. Ensure you get
*   a Server key, and not a Browser key.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;developer_key&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

*   Other parameters.
    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;access_type&apos;.
    ls_configuration-vvalue = &apos;offline&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;approval_prompt&apos;.
    ls_configuration-vvalue = &apos;force&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;request_visible_actions&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;ZGOOGLE_AUTH_OAUTH2&apos;.
    ls_configuration-vkey = &apos;federated_signon_certs_url&apos;.
    ls_configuration-vvalue = &apos;https://www.googleapis.com/oauth2/v1/certs&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

    ls_configuration-vcategory = &apos;classes&apos;.
    ls_configuration-vclass = &apos;google_cache_file&apos;.
    ls_configuration-vkey = &apos;directory&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.


*   Definition of service specific values like scopes, oauth token URLs,
*   etc. Example:
    ls_configuration-vcategory = &apos;services&apos;.
    ls_configuration-vvalue = &apos;&apos;.
    APPEND ls_configuration TO me-&gt;configuration.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETAPPLICATIONNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETAPPLICATIONNAME" SCONAME="EP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GETAPPLICATIONNAME.

* @return string the name of the application
    DATA: ls_configuration TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration INTO ls_configuration WITH KEY vkey = &apos;application_name&apos;.
    MOVE ls_configuration-vvalue TO ep_value.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETAUTHCLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETAUTHCLASS" SCONAME="EP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GETAUTHCLASS.

* Return the configured Auth class.
* @return string
    DATA: ls_configuration TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration INTO ls_configuration WITH KEY vkey = &apos;auth_class&apos;.
    MOVE ls_configuration-vvalue TO ep_value.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETBASEPATH" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETBASEPATH" SCONAME="EP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GETBASEPATH.

* @return string the base URL to use for API calls
    DATA: ls_configuration TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration INTO ls_configuration WITH KEY vkey = &apos;base_path&apos;.
    MOVE ls_configuration-vvalue TO ep_value.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCACHECLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCACHECLASS" SCONAME="EP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method GETCACHECLASS.

* Return the configured cache class.
* @return string
    DATA: ls_configuration TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration INTO ls_configuration WITH KEY vkey = &apos;cache_class&apos;.
    MOVE ls_configuration-vvalue TO ep_value.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCLASSCONFIG" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCLASSCONFIG" SCONAME="IP_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCLASSCONFIG" SCONAME="IP_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETCLASSCONFIG" SCONAME="ET_CONFIG" VERSION="1" LANGU="E" DESCRIPT="ZGOOGLE_KCV_T" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ZGOOGLE_KCV_T"/>
  <source>method GETCLASSCONFIG.

    DATA: ls_configuration TYPE zgoogle_kcv_s.

    LOOP AT me-&gt;configuration INTO ls_configuration.
      IF ip_key IS INITIAL.
        IF ls_configuration-vcategory = &apos;classes&apos; AND ls_configuration-vclass = ip_class.
          APPEND ls_configuration TO et_config.
          CLEAR ls_configuration.
        ENDIF.
      ELSE.
        IF ls_configuration-vcategory = &apos;classes&apos; AND ls_configuration-vclass = ip_class
                                                  AND ls_configuration-vkey = ip_key.
          APPEND ls_configuration TO et_config.
          CLEAR ls_configuration.
        ENDIF.
      ENDIF.
    ENDLOOP.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETIOCLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="GETIOCLASS" SCONAME="EP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD getioclass.
* Return the configured IO class.
* @return string

    DATA: ls_configuration TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration INTO ls_configuration WITH KEY vkey = &apos;io_class&apos;.
    MOVE ls_configuration-vvalue TO ep_value.
  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETACCESSTYPE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETACCESSTYPE" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETACCESSTYPE.

* Set the the access type requested (offline or online.)
* @param $access string - the access type
    me-&gt;setauthconfig( ip_key = &apos;access_type&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAPPLICATIONNAME" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAPPLICATIONNAME" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETAPPLICATIONNAME.

* Set the application name, this is included in the User-Agent HTTP header.
* @param string $name

    DATA: ls_configuration TYPE zgoogle_kcv_s,
          lv_prev          TYPE string.

    FIELD-SYMBOLS: &lt;fs_configuration&gt; TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration ASSIGNING &lt;fs_configuration&gt; WITH KEY vkey = &apos;application_name&apos;.
    IF sy-subrc = 0.
      &lt;fs_configuration&gt;-vvalue = ip_value.
    ENDIF.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAPPROVALPROMPT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAPPROVALPROMPT" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETAPPROVALPROMPT.

* Set when to show the approval prompt (auto or force)
* @param $approval string - the approval request
    me-&gt;setauthconfig( ip_key = &apos;approval_prompt&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAUTHCLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAUTHCLASS" SCONAME="IP_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETAUTHCLASS.

* Set the auth class.
* @param $class the class name to set

    DATA: ls_configuration TYPE zgoogle_kcv_s,
          lv_prev          TYPE string.

    FIELD-SYMBOLS: &lt;fs_configuration&gt; TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration ASSIGNING &lt;fs_configuration&gt; WITH KEY vkey = &apos;auth_class&apos;.
    IF sy-subrc = 0.
      lv_prev = &lt;fs_configuration&gt;-vvalue.
      &lt;fs_configuration&gt;-vvalue = ip_class.

      READ TABLE me-&gt;configuration TRANSPORTING NO FIELDS WITH KEY vcategory = &apos;classes&apos; vclass = ip_class.
      IF sy-subrc NE 0.
        LOOP AT me-&gt;configuration ASSIGNING &lt;fs_configuration&gt;.
          IF &lt;fs_configuration&gt;-vcategory = &apos;classes&apos; AND &lt;fs_configuration&gt;-vclass = lv_prev.
            &lt;fs_configuration&gt;-vclass = ip_class.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ENDIF.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAUTHCONFIG" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAUTHCONFIG" SCONAME="IP_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETAUTHCONFIG" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>METHOD setauthconfig.

    DATA: lv_class TYPE string.

    FIELD-SYMBOLS: &lt;fs_configuration&gt; TYPE zgoogle_kcv_s.

    lv_class = me-&gt;getauthclass( ).
    IF lv_class IS NOT INITIAL.
      READ TABLE me-&gt;configuration ASSIGNING &lt;fs_configuration&gt; WITH KEY vcategory = &apos;classes&apos;
                                                                         vclass    = lv_class
                                                                         vkey      = ip_key.
      IF sy-subrc = 0.
        &lt;fs_configuration&gt;-vvalue = ip_value.
      ENDIF.
    ENDIF.

  ENDMETHOD.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCACHECLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCACHECLASS" SCONAME="IP_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETCACHECLASS.

* Set the IO class.
* @param $class the class name to set

    DATA: ls_configuration TYPE zgoogle_kcv_s,
          lv_prev          TYPE string.

    FIELD-SYMBOLS: &lt;fs_configuration&gt; TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration ASSIGNING &lt;fs_configuration&gt; WITH KEY vkey = &apos;cache_class&apos;.
    IF sy-subrc = 0.
      lv_prev = &lt;fs_configuration&gt;-vvalue.
      &lt;fs_configuration&gt;-vvalue = ip_class.

      READ TABLE me-&gt;configuration TRANSPORTING NO FIELDS WITH KEY vcategory = &apos;classes&apos; vclass = ip_class.
      IF sy-subrc NE 0.
        LOOP AT me-&gt;configuration ASSIGNING &lt;fs_configuration&gt;.
          IF &lt;fs_configuration&gt;-vcategory = &apos;classes&apos; AND &lt;fs_configuration&gt;-vclass = lv_prev.
            &lt;fs_configuration&gt;-vclass = ip_class.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ENDIF.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLASSCONFIG" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLASSCONFIG" SCONAME="IP_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLASSCONFIG" SCONAME="IT_CONFIG" VERSION="1" LANGU="E" DESCRIPT="ZGOOGLE_KCV_T" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="ZGOOGLE_KCV_T"/>
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLASSCONFIG" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETCLASSCONFIG.

*    if (!is_array($config)) {
*      if (!isset($this-&gt;configuration[&apos;classes&apos;][$class])) {
*        $this-&gt;configuration[&apos;classes&apos;][$class] = array();
*      }
*      $this-&gt;configuration[&apos;classes&apos;][$class][$config] = $value;
*    } else {
*      $this-&gt;configuration[&apos;classes&apos;][$class] = $config;
  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLIENTID" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLIENTID" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETCLIENTID.

* Set the client ID for the auth class.
* @param $key string - the API console client ID
    me-&gt;setauthconfig( ip_key = &apos;client_id&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLIENTSECRET" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETCLIENTSECRET" SCONAME="IP_SECRET" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETCLIENTSECRET.

    me-&gt;setauthconfig( ip_key = &apos;client_secret&apos; ip_value = ip_secret ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETDEVELOPERKEY" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETDEVELOPERKEY" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETDEVELOPERKEY.

* Set the developer key for the auth class. Note that this is separate value
* from the client ID - if it looks like a URL, its a client ID!
* @param $key string - the API console developer key
    me-&gt;setauthconfig( ip_key = &apos;developer_key&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETIOCLASS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="10 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETIOCLASS" SCONAME="IP_CLASS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETIOCLASS.

* Set the IO class.
* @param $class the class name to set
    DATA: ls_configuration TYPE zgoogle_kcv_s,
         lv_prev          TYPE string.

    FIELD-SYMBOLS: &lt;fs_configuration&gt; TYPE zgoogle_kcv_s.
    READ TABLE me-&gt;configuration ASSIGNING &lt;fs_configuration&gt; WITH KEY vkey = &apos;io_class&apos;.
    IF sy-subrc = 0.
      lv_prev = &lt;fs_configuration&gt;-vvalue.
      &lt;fs_configuration&gt;-vvalue = ip_class.

      READ TABLE me-&gt;configuration TRANSPORTING NO FIELDS WITH KEY vcategory = &apos;classes&apos; vclass = ip_class.
      IF sy-subrc NE 0.
        LOOP AT me-&gt;configuration ASSIGNING &lt;fs_configuration&gt;.
          IF &lt;fs_configuration&gt;-vcategory = &apos;classes&apos; AND &lt;fs_configuration&gt;-vclass = lv_prev.
            &lt;fs_configuration&gt;-vclass = ip_class.
          ENDIF.
        ENDLOOP.
      ENDIF.

    ENDIF.

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETREDIRECTURI" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETREDIRECTURI" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETREDIRECTURI.

* Set the redirect uri for the auth class. Note that if using the
* Javascript based sign in flow, this should be the string &apos;postmessage&apos;.
* @param $key string - the URI that users should be redirected to
    me-&gt;setauthconfig( ip_key = &apos;redirect_uri&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
 <method CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETREQUESTVISIBLEACTIONS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
  <parameter CLSNAME="ZGOOGLE_CONFIG" CMPNAME="SETREQUESTVISIBLEACTIONS" SCONAME="IP_VALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
  <source>method SETREQUESTVISIBLEACTIONS.

* Set the app activities for the auth class.
* @param $rva string a space separated list of app activity types
    me-&gt;setauthconfig( ip_key = &apos;request_visible_actions&apos; ip_value = ip_value ).

  endmethod.</source>
 </method>
</CLAS>
